#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <dirent.h>
// #include ...
#include <stdlib.h>
#include <string.h>

#define MAXN 256


int stampa_dir(char *path) // Stampa ricorsivamente i contenuti della cartella data
{
	DIR * d = opendir(path);
	if(d==NULL)
	{
		printf("Warning: Errore nella lettura del directory. Chiusura del programma \n");
		exit(1);
	}
	// --- Codice principale
	struct dirent* entry; // directory name
	struct stat buf; // metadati
	while( (entry = readdir(d) ) != NULL)
	{
		char filepath[MAXN];
		if( strlen(filepath) + strlen(entry->d_name) +1 >= MAXN)
		{
			printf("Lunghezza stringa andato oltre il massimo. Programma terminato. \n");
			exit (1);
		} // Se ottengo stringhe vanno oltre il buffer consentito, esco
		strcpy(filepath, path);
		strcat(filepath, "/");
		strcat(filepath, entry->d_name);
			// concateno stringhe finchè posso
		printf("opened in %s \n", filepath);

		// Trattamento a seconda se ho file o path o symlink o FIFO (?) o coso malformato
		if( stat(filepath, &buf) < 0)
		{
			printf("Errore nella lettura del file. Uscita. \n");
			exit (1);
		}

		if (S_ISREG(buf.st_mode) )
		{
			// ho file normale
			// Info interessati: Inode, type, size, owner, group, node (path)
			printf("Node: %ld \n Type: file \n Size: %ld \n Owner: %ld %s \n Group: %ld %s \n Node: %s", TODO);
		}

		else if (S_ISDIR(buf.st_mode))
		{
			// ho direttorio
                        printf("Node: %ld \n Type: file \n Size: %ld \n Owner: %ld %s \n Group: %ld %s \n Node: %s", TODO);
			stampa_dir(filepath) // passo ricorsivo (spaventoso!)
		}

		else if (S_ISLNK(buf.st_mode))
		{
			// ho link simbolico; se è un link ad una cartella NON lo visito, per evitare cicli infiniti. Altrimenti lo visito

		}

		else if (S_ISFIFO(buf.st_mode))
		{
			// ho FIFO, non so che voglia dire
		}
	}
	int closedir(DIR *dir);
	// ---
	return 0;
}


int main(int argc, char * argv[])
{
	struct stat buf; // Info sul file
    	if (argc!=2)
	{
       		 printf("Specifica un path\n");
       		 return 1;
  	 }

    	if ( stat(argv[1], &buf) < 0)
	{
		printf("Errore nella lettura del file/cartella\n");
		exit (1);
	}

else{ // se va tutto bene...
	// TODO: Modificare
	if (!S_ISDIR(buf.st_mode))
	{
		printf("Errore: il path specificato non è una directory \n");
		exit (1);
	}
	else
	{
		stampa_dir(argv[1]);
	}
	return 0;
}

}
